---
# Namespace XRD (Composite Resource Definition)
# Restaurant Analogy: Menu item for "table reservation" - creates a dedicated space for your resources
# Using Crossplane v2 with namespaced XRs (no claims needed)
apiVersion: apiextensions.crossplane.io/v2
kind: CompositeResourceDefinition
metadata:
  name: managednamespaces.openportal.dev
  labels:
    terasky.backstage.io/generate-form: "true"
    terasky.backstage.io/version: "v1.1.0"
  annotations:
    crossplane.io/version: "v2.0"
    backstage.io/source-location: "url:https://github.com/open-service-portal/template-namespace"
    openportal.dev/tags: "namespace,kubernetes,core"
    openportal.dev/description: "Creates and manages Kubernetes namespaces with labels and annotations"
    openportal.dev/icon: "folder"
spec:
  scope: Cluster # Namespaces are cluster-scoped resources
  group: openportal.dev
  names:
    kind: ManagedNamespace
    plural: managednamespaces
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              description: Namespace configuration
              properties:
                name:
                  type: string
                  description: Name of the namespace to create
                  pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
                  minLength: 1
                  maxLength: 63
                labels:
                  type: object
                  description: Labels to apply to the namespace
                  additionalProperties:
                    type: string
                  default:
                    managed-by: crossplane
                    created-by: backstage
                annotations:
                  type: object
                  description: Annotations to apply to the namespace
                  additionalProperties:
                    type: string
                team:
                  type: string
                  description: Team that owns this namespace
                  default: platform-team
                environment:
                  type: string
                  description: Environment type (dev, staging, production)
                  default: dev
                  enum:
                    - dev
                    - staging
                    - production
              required:
                - name
            status:
              type: object
              properties:
                ready:
                  type: boolean
                  description: Whether the namespace is ready
                phase:
                  type: string
                  description: Current phase of the namespace
                message:
                  type: string
                  description: Status message