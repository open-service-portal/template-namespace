---
# Namespace Composition
# Restaurant Analogy: Recipe for "setting up a dining area" - prepares the space with all necessary elements
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: managednamespaces.openportal.dev
  labels:
    crossplane.io/xrd: managednamespaces.openportal.dev
spec:
  compositeTypeRef:
    apiVersion: openportal.dev/v1alpha1
    kind: ManagedNamespace
  
  # Use Pipeline mode for composition functions
  mode: Pipeline
  pipeline:
    # Step 1: Create namespace using provider-kubernetes Object resource
    # This approach works better with cluster-scoped XRs
    - step: create-namespace-object
      functionRef:
        name: function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: |
            ---
            apiVersion: kubernetes.crossplane.io/v1alpha2
            kind: Object
            metadata:
              name: namespace-{{ .observed.composite.resource.spec.name }}
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: namespace-resource
                gotemplating.fn.crossplane.io/ready: "True"
                crossplane.io/composite-resource-name: {{ .observed.composite.resource.metadata.name }}
            spec:
              forProvider:
                manifest:
                  apiVersion: v1
                  kind: Namespace
                  metadata:
                    name: {{ .observed.composite.resource.spec.name }}
                    labels:
                      managed-by: crossplane
                      created-by: backstage
                      team: {{ .observed.composite.resource.spec.team | default "platform-team" }}
                      environment: {{ .observed.composite.resource.spec.environment | default "dev" }}
                      {{- range $key, $value := .observed.composite.resource.spec.labels }}
                      {{ $key }}: {{ $value | quote }}
                      {{- end }}
                    annotations:
                      crossplane.io/composite-resource-name: {{ .observed.composite.resource.metadata.name }}
                      {{- range $key, $value := .observed.composite.resource.spec.annotations }}
                      {{ $key }}: {{ $value | quote }}
                      {{- end }}
              providerConfigRef:
                name: kubernetes-provider
    
    # Step 2: Mark XR as ready
    - step: auto-ready
      functionRef:
        name: function-auto-ready